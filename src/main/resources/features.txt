java 9 features:

# jigsaw modules: https://openjdk.java.net/projects/jigsaw/quick-start

# enable logging gc on startup (can to turn on logging of any other parts of jvm)
# -Xlog:help will output possible options and examples
java -Xlog:gc=debug:file=gc.txt:none

# Reactive Streams Publish-Subscribe framework support
java.util.concurrent.Flow - class


java 10 features:

# performance improvements: https://www.baeldung.com/java-10-performance-improvements
# full GC for G1 garbage collector (which is default since java 9) became parallel instead of single threaded

# application class-data sharing: https://www.baeldung.com/java-10-performance-improvements#application-class-data-sharing
# this command will dump the classes loaded by the HelloWorld application into hello.lst
java -Xshare:off -XX:+UseAppCDS -XX:DumpLoadedClassList=hello.lst -cp hello.jar HelloWorld
# this command creates archive with dumped classes into hello.jsa file
java -Xshare:dump -XX:+UseAppCDS -XX:SharedClassListFile=hello.lst -XX:SharedArchiveFile=hello.jsa -cp hello.jar
# this command starts the HelloWorld application with hello.jsa as input
java -Xshare:on -XX:+UseAppCDS -XX:SharedArchiveFile=hello.jsa -cp hello.jar HelloWorld

# new experimental JIT compiler for HotSpot JVM - Graal. used for linux x64 platforms. command to activate:
-XX:+UnlockExperimentalVMOptions -XX:+UseJVMCICompiler

# JVM now is container-aware. now supports linux platforms only. this can extract container-specific configurations
# some additional command-line options:

# disable container-awareness
-XX:-UseContainerSupport

# specify the number of CPUs which JVM will use in container
-XX:ActiveProcessorCount=count

# memory options
-XX:InitialRAMPercentage
-XX:MaxRAMPercentage
-XX:MinRAMPercentage

# root certificates: https://www.baeldung.com/java-10-overview#root-certificates

# 'javah' removed. use 'javac -h' instead
# 'policytool' removed
# 'java -Xprofoption' removed. use 'jmap' tool instead

# 'java.security.acl' marked to remove. replaced by 'java.security.Policy'
# 'java.security.{Certificate,Identity,IdentityScope,Signer}' marked to remove

# 'java -version' now contains release date


java 11 features:

# nest based access control: https://www.baeldung.com/java-11-new-features#7-nest-based-access-control
# now we don't need to compile java file to run the class - 'java HelloWorld.java'

# new garbage collector no-op 'epsilon'. in fact it doesn't collect any garbage and added for simulating out of memory errors
-XX:+UnlockExperimentalVMOptions -XX:+UseEpsilonGC

# Java Flight Recorder now is open-source in OpenJDK: https://www.baeldung.com/java-flight-recorder-monitoring
# to start 120sec recording:
-XX:StartFlightRecording=duration=120s,settings=profile,filename=java-demo-app.jfr
# to analyse and visualize we can use JDK Mission Control

# Java EE and CORBA completely removed

# JDK Mission Control is now as separated download (like JavaFX too)
# Nashorn deprecated
# experimental low-latency ZGC garbage collector